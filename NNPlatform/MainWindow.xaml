<Window x:Class="NNPlatform.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NNPlatform"
        xmlns:Controls="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
        xmlns:graph="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:converters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
        xmlns:extbehaviour="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
        mc:Ignorable="d"
        Title="NN Platform" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>

        <converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />
        <converters:PointArrayToString x:Key="pointsToStringConverter" />

        <Style TargetType="{x:Type graph:EdgeControl}">
            <Style.Resources>
                <ToolTip x:Key="ToolTipContent">
                    <StackPanel>
                        <TextBlock FontWeight="Bold" Text="Edge Information"/>
                        <TextBlock Text="{Binding Text}"/>
                    </StackPanel>
                </ToolTip>
            </Style.Resources>
            <Setter Property="ToolTip" Value="{StaticResource ToolTipContent}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graph:EdgeControl}">
                        <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="{TemplateBinding StrokeThickness}"
                          MinWidth="1"
                          MinHeight="1"
                          ToolTip="{TemplateBinding ToolTip}"
                          x:Name="edgePath">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.Rect" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.Rect" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="SelfControl" />
                                        </MultiBinding>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
            <Setter Property="MinWidth"
                Value="1" />
            <Setter Property="MinHeight"
                Value="1" />
            <Setter Property="Background"
                Value="Red" />
            <Setter Property="Foreground"
                Value="Silver" />
            <Setter Property="Opacity"
                Value="0.5" />
            <Style.Triggers>
                <Trigger Property="graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                    <Setter Property="Foreground"
                        Value="Black" />
                </Trigger>
                <Trigger Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                    <Setter Property="Foreground"
                        Value="Yellow" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                        <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="InEdge" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground"
                        Value="Red" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                        <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="OutEdge" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground"
                        Value="Blue" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type graph:VertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graph:VertexControl}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
							        >
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="LightGray" 
                                    Opacity="0.3" Direction="315"/>
                            </Border.Effect>
                            <ContentPresenter Content="{TemplateBinding Vertex}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate DataType="{x:Type local:NeuralNetworkVertex}">
                                        <Border x:Name="TextBorder" BorderThickness="2" Background="Transparent">
                                            <TextBlock x:Name="Text" Tag="{Binding Path=.}" Text="{Binding Path=Text, Mode=OneWay}" />
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsActive}" Value="True">
                                                <Setter TargetName="TextBorder" Property="BorderBrush" Value="Green" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                                                <Setter TargetName="TextBorder" Property="BorderBrush" Value="Transparent" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="White" Offset="0" />
                        <GradientStop Color="Silver" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
            <Setter Property="extbehaviour:DragBehaviour.IsDragEnabled"
                Value="True" />
            <Setter Property="extbehaviour:DragBehaviour.X"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(graph:GraphCanvas.X),Mode=TwoWay}" />
            <Setter Property="extbehaviour:DragBehaviour.Y"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(graph:GraphCanvas.Y),Mode=TwoWay}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Style.Triggers>
                <Trigger Property="graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                    <Setter Property="BorderBrush"
                        Value="Orange" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </Trigger>
                <Trigger Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                    <Setter Property="BorderBrush"
                        Value="Yellow" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                        <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Source" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush"
                        Value="Red" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                        <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Target" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush"
                        Value="Blue" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type graph:CompoundVertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graph:CompoundVertexControl}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type graph:VertexControl}">
                                <Setter Property="extbehaviour:DragBehaviour.IsDragEnabled" Value="True" />
                            </Style>
                        </ControlTemplate.Resources>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="LightGray" 
                                    Opacity="0.3" Direction="315"/>
                            </Border.Effect>
                            <graph:DragableExpander x:Name="Expander" IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}">
                                <Expander.Header>
                                    <ContentPresenter Content="{TemplateBinding Vertex}">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate DataType="{x:Type local:NeuralNetworkVertex}">
                                                <Border x:Name="TextBorder" BorderThickness="2" BorderBrush="Transparent" >
                                                    <TextBlock x:Name="Text" Tag="{Binding Path=.}" Text="{Binding Path=Text, Mode=OneWay}" />
                                                </Border>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsActive}" Value="True">
                                                        <Setter TargetName="TextBorder" Property="BorderBrush" Value="Green" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                                                        <Setter TargetName="TextBorder" Property="BorderBrush" Value="Transparent" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </Expander.Header>

                                <graph:GSItemsControl x:Name="PART_InnerCanvas" ItemsSource="{TemplateBinding Vertices}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type graph:VertexControl}">
                                            <Border x:Name="ItemBorder" BorderBrush="Transparent" 
                                                Background="Transparent"
							                    BorderThickness="1">
                                                <Border.Effect>
                                                    <DropShadowEffect BlurRadius="1" Color="LightGray" Opacity="0.3" Direction="315"/>
                                                </Border.Effect>
                                                <ContentPresenter Content="{Binding Vertex}">
                                                    <ContentPresenter.ContentTemplate>
                                                        <DataTemplate DataType="{x:Type local:NeuralNetworkVertex}">
                                                            <Border x:Name="TextBorder" BorderBrush="Transparent" BorderThickness="2">
                                                                <TextBlock x:Name="Text" Text="{Binding Path=Text, Mode=OneWay}" />
                                                            </Border>
                                                            <DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsActive}" Value="True">
                                                                    <Setter TargetName="TextBorder" Property="BorderBrush" Value="Green" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                                                                    <Setter TargetName="TextBorder" Property="BorderBrush" Value="Transparent" />
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>
                                                            <DataTemplate.Resources>
                                                                <Style TargetType="{x:Type graph:VertexControl}">
                                                                    <Setter Property="graph:GraphElementBehaviour.HighlightTrigger" Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
                                                                    <Style.Triggers>
                                                                        <Trigger Property="graph:GraphElementBehaviour.IsHighlighted" Value="True">
                                                                            <Setter Property="BorderBrush" Value="Orange" />
                                                                            <Setter Property="BorderThickness" Value="2" />
                                                                        </Trigger>
                                                                        <Trigger Property="graph:GraphElementBehaviour.IsSemiHighlighted" Value="True">
                                                                            <Setter Property="BorderBrush" Value="Yellow" />
                                                                            <Setter Property="BorderThickness" Value="2" />
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted" Value="True" />
                                                                                <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo" Value="Source" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="BorderBrush" Value="Red" />
                                                                            <Setter Property="BorderThickness" Value="2" />
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted" Value="True" />
                                                                                <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo" Value="Target" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="BorderBrush" Value="Blue" />
                                                                            <Setter Property="BorderThickness" Value="2" />
                                                                        </MultiTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </DataTemplate.Resources>
                                                        </DataTemplate>

                                                    </ContentPresenter.ContentTemplate>
                                                </ContentPresenter>
                                            </Border>

                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </graph:GSItemsControl>
                            </graph:DragableExpander>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,1">
                        <GradientStop Color="White"
                                          Offset="0" />
                        <GradientStop Color="Silver"
                                          Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Setter Property="graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
            <Setter Property="extbehaviour:DragBehaviour.IsDragEnabled"
                Value="True" />
            <Setter Property="extbehaviour:DragBehaviour.X"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(graph:GraphCanvas.X),Mode=TwoWay}" />
            <Setter Property="extbehaviour:DragBehaviour.Y"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(graph:GraphCanvas.Y),Mode=TwoWay}" />
            <Setter Property="BorderThickness"
                Value="2" />
            <Setter Property="BorderBrush"
                Value="Silver" />

            <Style.Triggers>
                <Trigger Property="graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                    <Setter Property="BorderBrush"
                        Value="Orange" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </Trigger>
                <Trigger Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                    <Setter Property="BorderBrush"
                        Value="Yellow" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                        <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Source" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush"
                        Value="Red" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                        <Condition Property="graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Target" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush"
                        Value="Blue" />
                    <Setter Property="BorderThickness"
                        Value="2" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Border BorderThickness="2" BorderBrush="AliceBlue">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="240" />
                <ColumnDefinition Width="240" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="180" />
            </Grid.ColumnDefinitions>
            
            <Controls:ZoomControl KeyboardNavigation.IsTabStop="False" KeyboardNavigation.DirectionalNavigation="None" IsTabStop="False" Zoom="0.2" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" >
                <local:NeuralNetworkGraphLayout x:Name="graphLayout"/>
            </Controls:ZoomControl>
                   
            <Border BorderThickness="2" BorderBrush="Blue" Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2">
                <StackPanel Orientation="Vertical">
                    <TextBlock TextAlignment="Center">Results Edit</TextBlock>
                    <local:ExtractionEdit IsTabStop="True" x:Name="Edit" Height="280" MouseLeftButtonDown="Edit_MouseLeftButtonDown" ></local:ExtractionEdit>
                </StackPanel>
            </Border>
            <Grid Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="96"/>
                    <RowDefinition Height="36"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border BorderThickness="2" BorderBrush="Yellow"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                    <TextBox Focusable="False" x:Name="Output" Background="LightGray" IsReadOnly="True"></TextBox>
                </Border>
                <Border BorderThickness="2" BorderBrush="LightGray" Grid.Column="0" Grid.Row="2" >
                    <TextBox AcceptsTab="True" AcceptsReturn="True" x:Name="InputTextBox" 
                             Text="2+((3+4))" Margin="0,-2,0,0"/>
                </Border>
                <StackPanel Grid.Column="1" Grid.Row="2"  Orientation="Horizontal">
                    <TextBlock Focusable="False" Width="60" Text="0"  TextAlignment="Center" VerticalAlignment="Center" x:Name="CounterText"/>
                    <Button Focusable="False" Click="ParseStepButton_Click">Parse Step</Button>
                    <Button Focusable="False" Click="ParseAllButton_Click">Parse All</Button>
                    <Button Focusable="False" Click="ResetButton_Click">Reset</Button>
                    <Button Focusable="False" Click="ProcessButton_Click">Calculate</Button>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="3" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="360*"/>
                    <RowDefinition Height="120"/>
                </Grid.RowDefinitions>
                <Border BorderThickness="2" BorderBrush="Bisque" Grid.Row="0" Grid.Column="0" >
                    <ScrollViewer Focusable="False"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Visible">
                        <StackPanel Focusable="False" Orientation="Vertical">
                            <TextBlock TextAlignment="Center">Result Trees</TextBlock>
                            <TreeView Focusable="False" x:Name="ResultsTree" />
                        </StackPanel>
                    </ScrollViewer>
                </Border>
                <Border BorderThickness="2" BorderBrush="Coral" Grid.Row="1" Grid.Column="1" >
                    <ScrollViewer  
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Visible">
                        <StackPanel Orientation="Vertical" >
                            <TextBlock TextAlignment="Center">Definitions Tree</TextBlock>
                            <TreeView x:Name="AggregationTree"/>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>
    </Border>
</Window>
